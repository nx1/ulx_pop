ULX Population Study
====================

This repo contains auxilary files for the paper entitled The effect of Lense-Thirring
on the observed population of ULXs (in prep).


ULXLC
=====
XSPEC model ulxlc: http://www.sternwarte.uni-erlangen.de/~dauser/research/ulxlc/
How to install locally:
    1. Extract to desired location
    2. sudo apt install tcsh
    3. ./compile_ulxlc.csh 
    4. set LOCAL_MODEL_DIRECTORY in /home/.xspec/Xspec.init
    5. add export ULXLC_TABLE_PATH=/home/x1/localmodels/ulxlc to .bashrc
    

DATA FILES
==========
There are several data files that are too large for github.
data/interim/df_a.csv contains the MC simulation results from calculating alive/dead/transient systems from lightcurves.
data/curves/ contains the outputted lightcurves from ULXLC, these are around ~170kb each but end up adding upto a lot when
you have around 500k of them.

PIPELINE
========
0. startrack data
Raw datafiles from STARTRACK located in /data/external/data_mdot
The data from these files were combined into the file /data/processed/startrack_concat.csv
From this point forward, the unique system_id of each system is specified by the index in startrack_concat.csv

1. src/data/process_startrack.py
Takes the data from /data/processed/startrack_concat.csv
and calculates various other quantities which are saved in the file
/data/processed/all_systems_df.csv


2. src/ulxlc_runner.py
will sample systems from a df_a.csv (selecting only the systems that are beamed ULXs with opening angles < 45)
and run ulxlc to create a lightcurve with the system's specific parameters and the specified parameters for ULXLC.
The lightcurves are saved with the pattern:

theta-dincl-inclination.txt

Where theta and dincl are the half opening angles and the precessional angles.

and all lightcurve files are saved in data/curves/

For our simulations, the following fixed parameters were used:
period  = 10.0
phase   = 0.0
beta    = 0.2
norm    = 1.0
dopulse = 0.0


3. src/create_normalisation_lookup.py
Run through 0 inclination lightcurves and calculate normalisation ULX
limits at 1E39 ergs equivilent, store the output in a .pkl file for further use.

The pickle file can be found in /data/processed/N_lim_dict.pickle

final dict is in the form:
N_lim_dict = {system_id-dincl-inclination : N_lim}


3. src/curve_classifier.py
Used to process the lightcurve files and classify the system as either alive/dead/transient.
Does this in a 'quick' manner i.e does the lightcurve span over the 1e39 range and therefore is transient.

The results of this processed are saved in the file:
/data/processed/curve_classications.csv


4. src/df_a_analysis.py
4. src/bh_vs_classification.py

simulates the effect of sampling systems from the FULL ulx population
in a specified BH ratio and the the number of alive/dead transient systems


1. sample a N ULXs in a specified bh ratio.
2. Is it visible
seperate by metallicity and tage.


Could we calculate for each system, a probably distribution for
its curve classification?

yes, by sampling from them we are essentially doing that.





samples from curve_classifcations to calculate the effect of the
BH_ratio on the alive/dead/transient population


The results from these simulations are saved in:
data/interim/sims_with_metallicity/{Z}/{results.csv}


5. alive_dead_transient_plotter.py
Is used to plot the results from step 4.
 
